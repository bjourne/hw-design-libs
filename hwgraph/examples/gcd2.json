// Same GCD except now we are squeezing all state into one register.
    {
    "predecessors" : {
        // Slices
        "sl_p_fr_pxy" : ["pxy", "c16_8", "c16_8"],
        "sl_x_fr_pxy" : ["pxy", "c15_8", "c8_8"],
        "sl_y_fr_pxy" : ["pxy", "c7_8", "c0_8"],

        // Registers
        "pxy" : ["clk", "next0"],

        // Concatenations
        "cat_rstn" : ["c0_1", "c0_8", "c0_8"],
        "cat_load" : ["c1_1", "a", "b"],

        "cat_done" : ["c0_1", "sl_y_fr_pxy", "sl_x_fr_pxy"],
        "cat_x_ge_y" : ["sl_p_fr_pxy", "sl_y_fr_pxy", "sl_x_fr_pxy"],
        "cat_x_y_sub_x" : ["sl_p_fr_pxy", "sl_x_fr_pxy", "y_sub_x"],

        // Negations
        "not_p" : ["sl_p_fr_pxy"],
        "not_rstn" : ["rstn"],

        // Comparisions and subtraction
        "x_ge_y" : ["sl_x_fr_pxy", "sl_y_fr_pxy"],
        "y_eq_0" : ["sl_y_fr_pxy", "c0_8"],
        "y_sub_x" : ["sl_y_fr_pxy", "sl_x_fr_pxy"],

        // And gates
        "begin_p" : ["in_valid", "not_p"],
        "y_eq_0_and_p" : ["y_eq_0", "sl_p_fr_pxy"],

        // Five muxes
        "next0" : ["not_rstn", "cat_rstn", "next1"],
        "next1" : ["begin_p", "cat_load", "next2"],
        "next2" : ["y_eq_0", "cat_done", "next3"],
        "next3" : ["x_ge_y", "cat_x_ge_y", "cat_x_y_sub_x"],

        // Output variables
        "in_ready" : ["not_p"],
        "o" : ["sl_x_fr_pxy"],
        "out_valid" : ["y_eq_0_and_p"]
    },
    "arities" : {
        "1" : ["clk", "rstn", "in_valid", "in_ready", "out_valid"],
        "8" : ["a", "b", "o"]
    },
    "values" : {
        "c0_1" : 0,
        "c0_8" : 0,
        "c1_1" : 1,
        "c7_8" : 7,
        "c8_8" : 8,
        "c15_8" : 15,
        "c16_8" : 16
    },
    "aliases" : {
        "sl_p_fr_pxy" : "p",
        "sl_x_fr_pxy" : "x",
        "sl_y_fr_pxy" : "y"
    },
    "types" : {
        "input" : ["clk", "rstn", "a", "b", "in_valid"],
        "output" : ["in_ready", "out_valid", "o"],
        "const" : ["c0_1", "c0_8", "c1_1", "c7_8", "c8_8", "c15_8", "c16_8"],

        // Flip flops
        "reg" : ["pxy"],

        // Logic
        "and" : ["begin_p", "y_eq_0_and_p"],
        "not" : ["not_p", "not_rstn"],

        // Muxes
        "if" : ["next0", "next1", "next2", "next3"],

        // Arith
        "ge" : ["x_ge_y"],
        "eq" : ["y_eq_0"],
        "sub" : ["y_sub_x"],

        // Concat
        "cat" : ["cat_load", "cat_rstn", "cat_done", "cat_x_ge_y", "cat_x_y_sub_x"],

        // Slices
        "slice" : ["sl_p_fr_pxy", "sl_x_fr_pxy", "sl_y_fr_pxy"]
    }
}
