{
    "input" : {
        "input" : [],
        "output" : ["o"],
        "constraints" : []
    },
    "output" : {
        "input" : ["i"],
        "output" : [],
        "constraints" : []
    },
    "const" : {
        "input" : [],
        "output" : ["o"],
        "constraints" : []
    },
    // Temporarily here
    "full_adder" : {
        "input" : ["a", "b", "ci"],
        "output" : ["s", "co"],
        "is_module" : true,
        "constraints" : [
            "a == 1",
            "b == 1",
            "s == 1",
            "co == 1"
        ]
    },
    // Structural
    "cat" : {
        "input" : ["i1", "i2"],
        "output" : ["o"],
        "constraints" : [
            "i1 + i2 == o"
        ]
    },
    "slice" : {
        "input" : ["bits", "hi", "lo"],
        "output" : ["o"],
        "constraints" : [
            "value(hi) > value(lo)",
            "(value(hi) - value(lo)) + 1 == o"
        ]
    },
    "cast" : {
        "input" : ["n", "i"],
        "output" : ["o"],
        "constraints" : [
            "value(n) == o",
            "i >= value(n)"
        ]
    },
    // Logic
    "not" : {
        "input" : ["i"],
        "output" : ["o"],
        "constraints" : [
            "i == o"
        ]
    },

    // Comparisons
    "eq" : {
        "input": ["i1", "i2"],
        "output": ["o"],
        "constraints" : [
            "o == 1",
            "i1 == i2"
        ]
    },
    "gt" : {
        "input": ["i1", "i2"],
        "output": ["o"],
        "constraints" : [
            "o == 1",
            "i1 == i2"
        ]
    },
    "ge" : {
        "input": ["i1", "i2"],
        "output": ["o"],
        "constraints" : [
            "o == 1",
            "i1 == i2"
        ]
    },
    "shl" : {
        "input": ["bits", "i"],
        "output": ["o"],
        "constraints" : [
            "bits == o"
        ]
    },
    "and" : {
        "input": ["i1", "i2"],
        "output": ["o"],
        "constraints" : [
            "i1 == i2",
            "i2 == o"
        ]
    },
    "xor" : {
        "input": ["i1", "i2"],
        "output": ["o"],
        "constraints" : [
            "i1 == i2",
            "i2 == o"
        ]
    },
    "or" : {
        "input": ["i1", "i2"],
        "output": ["o"],
        "constraints" : [
            "i1 == i2",
            "i2 == o"
        ]
    },
    "sub" : {
        "input": ["i1", "i2"],
        "output": ["o"],
        "constraints" : [
            "i1 == i2",
            "i2 == o"
        ]
    },
    "if" : {
        "input" : ["c", "i1", "i2"],
        "output" : ["o"],
        "constraints" : [
            "i1 == i2",
            "i2 == o",
            "c == 1"

        ]
    },
    "reg" : {
        "input" : ["clk", "i"],
        "output" : ["o"],
        "constraints" : [
            "clk == 1",
            "i == o"
        ]
    }
}
